// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: pkg/sinks/plugin/proto/metrics.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type KafkaMeter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string                 `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	Meta      map[string]string      `protobuf:"bytes,3,rep,name=Meta,proto3" json:"Meta,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Rate1     float64                `protobuf:"fixed64,4,opt,name=Rate1,proto3" json:"Rate1,omitempty"`
	Rate5     float64                `protobuf:"fixed64,5,opt,name=Rate5,proto3" json:"Rate5,omitempty"`
	Rate15    float64                `protobuf:"fixed64,6,opt,name=Rate15,proto3" json:"Rate15,omitempty"`
	RateMean  float64                `protobuf:"fixed64,7,opt,name=RateMean,proto3" json:"RateMean,omitempty"`
	Count     int64                  `protobuf:"varint,8,opt,name=Count,proto3" json:"Count,omitempty"`
}

func (x *KafkaMeter) Reset() {
	*x = KafkaMeter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_sinks_plugin_proto_metrics_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KafkaMeter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KafkaMeter) ProtoMessage() {}

func (x *KafkaMeter) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_sinks_plugin_proto_metrics_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KafkaMeter.ProtoReflect.Descriptor instead.
func (*KafkaMeter) Descriptor() ([]byte, []int) {
	return file_pkg_sinks_plugin_proto_metrics_proto_rawDescGZIP(), []int{0}
}

func (x *KafkaMeter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *KafkaMeter) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *KafkaMeter) GetMeta() map[string]string {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *KafkaMeter) GetRate1() float64 {
	if x != nil {
		return x.Rate1
	}
	return 0
}

func (x *KafkaMeter) GetRate5() float64 {
	if x != nil {
		return x.Rate5
	}
	return 0
}

func (x *KafkaMeter) GetRate15() float64 {
	if x != nil {
		return x.Rate15
	}
	return 0
}

func (x *KafkaMeter) GetRateMean() float64 {
	if x != nil {
		return x.RateMean
	}
	return 0
}

func (x *KafkaMeter) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type KafkaGauge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string                 `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	Meta      map[string]string      `protobuf:"bytes,3,rep,name=Meta,proto3" json:"Meta,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Value     int64                  `protobuf:"varint,4,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (x *KafkaGauge) Reset() {
	*x = KafkaGauge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_sinks_plugin_proto_metrics_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KafkaGauge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KafkaGauge) ProtoMessage() {}

func (x *KafkaGauge) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_sinks_plugin_proto_metrics_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KafkaGauge.ProtoReflect.Descriptor instead.
func (*KafkaGauge) Descriptor() ([]byte, []int) {
	return file_pkg_sinks_plugin_proto_metrics_proto_rawDescGZIP(), []int{1}
}

func (x *KafkaGauge) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *KafkaGauge) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *KafkaGauge) GetMeta() map[string]string {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *KafkaGauge) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type WriteKafkaMetricsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metrics []*anypb.Any `protobuf:"bytes,1,rep,name=metrics,proto3" json:"metrics,omitempty"`
}

func (x *WriteKafkaMetricsRequest) Reset() {
	*x = WriteKafkaMetricsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_sinks_plugin_proto_metrics_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteKafkaMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteKafkaMetricsRequest) ProtoMessage() {}

func (x *WriteKafkaMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_sinks_plugin_proto_metrics_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteKafkaMetricsRequest.ProtoReflect.Descriptor instead.
func (*WriteKafkaMetricsRequest) Descriptor() ([]byte, []int) {
	return file_pkg_sinks_plugin_proto_metrics_proto_rawDescGZIP(), []int{2}
}

func (x *WriteKafkaMetricsRequest) GetMetrics() []*anypb.Any {
	if x != nil {
		return x.Metrics
	}
	return nil
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_sinks_plugin_proto_metrics_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_sinks_plugin_proto_metrics_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_pkg_sinks_plugin_proto_metrics_proto_rawDescGZIP(), []int{3}
}

var File_pkg_sinks_plugin_proto_metrics_proto protoreflect.FileDescriptor

var file_pkg_sinks_plugin_proto_metrics_proto_rawDesc = []byte{
	0x0a, 0x24, 0x70, 0x6b, 0x67, 0x2f, 0x73, 0x69, 0x6e, 0x6b, 0x73, 0x2f, 0x70, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xba, 0x02, 0x0a, 0x0a, 0x4b, 0x61,
	0x66, 0x6b, 0x61, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x09,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x2f, 0x0a, 0x04, 0x4d, 0x65, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4b, 0x61, 0x66,
	0x6b, 0x61, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x04, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x52, 0x61, 0x74, 0x65, 0x31,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x52, 0x61, 0x74, 0x65, 0x31, 0x12, 0x14, 0x0a,
	0x05, 0x52, 0x61, 0x74, 0x65, 0x35, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x52, 0x61,
	0x74, 0x65, 0x35, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x61, 0x74, 0x65, 0x31, 0x35, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x06, 0x52, 0x61, 0x74, 0x65, 0x31, 0x35, 0x12, 0x1a, 0x0a, 0x08, 0x52,
	0x61, 0x74, 0x65, 0x4d, 0x65, 0x61, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x52,
	0x61, 0x74, 0x65, 0x4d, 0x65, 0x61, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x37, 0x0a,
	0x09, 0x4d, 0x65, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xda, 0x01, 0x0a, 0x0a, 0x4b, 0x61, 0x66, 0x6b, 0x61,
	0x47, 0x61, 0x75, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x2f, 0x0a, 0x04, 0x4d, 0x65, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4b, 0x61, 0x66, 0x6b, 0x61, 0x47,
	0x61, 0x75, 0x67, 0x65, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04,
	0x4d, 0x65, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x37, 0x0a, 0x09, 0x4d, 0x65,
	0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x4a, 0x0a, 0x18, 0x57, 0x72, 0x69, 0x74, 0x65, 0x4b, 0x61, 0x66, 0x6b,
	0x61, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2e, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x22,
	0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0x51, 0x0a, 0x0b, 0x4b, 0x61, 0x66, 0x6b,
	0x61, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x12, 0x42, 0x0a, 0x11, 0x57, 0x72, 0x69, 0x74, 0x65,
	0x4b, 0x61, 0x66, 0x6b, 0x61, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x1f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x4b, 0x61, 0x66, 0x6b, 0x61, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x09, 0x5a, 0x07, 0x2e,
	0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_sinks_plugin_proto_metrics_proto_rawDescOnce sync.Once
	file_pkg_sinks_plugin_proto_metrics_proto_rawDescData = file_pkg_sinks_plugin_proto_metrics_proto_rawDesc
)

func file_pkg_sinks_plugin_proto_metrics_proto_rawDescGZIP() []byte {
	file_pkg_sinks_plugin_proto_metrics_proto_rawDescOnce.Do(func() {
		file_pkg_sinks_plugin_proto_metrics_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_sinks_plugin_proto_metrics_proto_rawDescData)
	})
	return file_pkg_sinks_plugin_proto_metrics_proto_rawDescData
}

var file_pkg_sinks_plugin_proto_metrics_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_pkg_sinks_plugin_proto_metrics_proto_goTypes = []any{
	(*KafkaMeter)(nil),               // 0: proto.KafkaMeter
	(*KafkaGauge)(nil),               // 1: proto.KafkaGauge
	(*WriteKafkaMetricsRequest)(nil), // 2: proto.WriteKafkaMetricsRequest
	(*Empty)(nil),                    // 3: proto.Empty
	nil,                              // 4: proto.KafkaMeter.MetaEntry
	nil,                              // 5: proto.KafkaGauge.MetaEntry
	(*timestamppb.Timestamp)(nil),    // 6: google.protobuf.Timestamp
	(*anypb.Any)(nil),                // 7: google.protobuf.Any
}
var file_pkg_sinks_plugin_proto_metrics_proto_depIdxs = []int32{
	6, // 0: proto.KafkaMeter.Timestamp:type_name -> google.protobuf.Timestamp
	4, // 1: proto.KafkaMeter.Meta:type_name -> proto.KafkaMeter.MetaEntry
	6, // 2: proto.KafkaGauge.Timestamp:type_name -> google.protobuf.Timestamp
	5, // 3: proto.KafkaGauge.Meta:type_name -> proto.KafkaGauge.MetaEntry
	7, // 4: proto.WriteKafkaMetricsRequest.metrics:type_name -> google.protobuf.Any
	2, // 5: proto.KafkaPlugin.WriteKafkaMetrics:input_type -> proto.WriteKafkaMetricsRequest
	3, // 6: proto.KafkaPlugin.WriteKafkaMetrics:output_type -> proto.Empty
	6, // [6:7] is the sub-list for method output_type
	5, // [5:6] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_pkg_sinks_plugin_proto_metrics_proto_init() }
func file_pkg_sinks_plugin_proto_metrics_proto_init() {
	if File_pkg_sinks_plugin_proto_metrics_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_sinks_plugin_proto_metrics_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*KafkaMeter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_sinks_plugin_proto_metrics_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*KafkaGauge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_sinks_plugin_proto_metrics_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*WriteKafkaMetricsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_sinks_plugin_proto_metrics_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_sinks_plugin_proto_metrics_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_sinks_plugin_proto_metrics_proto_goTypes,
		DependencyIndexes: file_pkg_sinks_plugin_proto_metrics_proto_depIdxs,
		MessageInfos:      file_pkg_sinks_plugin_proto_metrics_proto_msgTypes,
	}.Build()
	File_pkg_sinks_plugin_proto_metrics_proto = out.File
	file_pkg_sinks_plugin_proto_metrics_proto_rawDesc = nil
	file_pkg_sinks_plugin_proto_metrics_proto_goTypes = nil
	file_pkg_sinks_plugin_proto_metrics_proto_depIdxs = nil
}
